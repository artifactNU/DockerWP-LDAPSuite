#!/bin/bash
set -eu
set -o pipefail

readonly script_path="$(realpath "$0")"
readonly script_name="$(basename "${script_path}")"
readonly script_dir="$(dirname "${script_path}")"

timestamp=$(date +'%Y%m%d_%H%M%S')

all_volumes=(DWLS-ldap-data DWLS-ldap-config DWLS-mysql DWLS-wordpress)
affected_volumes=()

usage=$(
	cat <<END
Usage:
	${script_name} [-h|--help]Â [-v|--volume VOLUME]
	-h, --help:	Display this help and exit
	-v, --volume:	Volume to backup (default all). Valid values are
			all, DWLS-ldap-data, DWLS-ldap-config, DWLS-mysql, DWLS-wordpress

Examples:
	Backup all docker volumes:	${script_name}
	Backup mysql wordpress volume:	${script_name} -v wordpress
END
)

function help() {
	echo "${usage}"
}

function backup_volumes() {

	for volume in "${affected_volumes[@]}"; do
        backup_dir="/usr/src/app/backups/${volume}/${timestamp}"
		mkdir -p "$backup_dir"
        (cd / && tar -zcvf "/usr/src/app/backups/${volume}/${timestamp}/$volume.tar.gz" "$volume")
	done
}

function print_affected_volumes() {
	for volume in "${affected_volumes[@]}"; do
		echo "${volume}"
	done
}




function print_job_description() {
    info_msg=$(cat <<-END
		============================================================
		INFO
		============================================================
		Backing up the following volumes:

		$(print_affected_volumes)

		------------------------------------------------------------
	END
	)
    echo "$info_msg"
}


# process/validate script args and flags
while [ $# -gt 0 ]; do
	case "$1" in
	-h | --help)
		help
		exit 0
		;;
	-v | --volume)
		affected_volumes+=("$1")
		shift
		;;
	-*)
		echo "Invalid_option $1"
		help
		exit 1
		;;
	*)
		break
		;;
	esac
done

# remove all other occurences if "all" has been specified
if [[ ${affected_volumes[*]} =~ "all" ]]; then
	affected_volumes=("${all_volumes[@]}")
fi

# default to "all" volumes if no volume options was given
if [[ -z "${affected_volumes[*]}" ]]; then
    affected_volumes=("${all_volumes[@]}")
fi

print_job_description
backup_volumes